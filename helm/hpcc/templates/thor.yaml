{{ range $.Values.thor -}}
{{- if not .disabled -}}
{{- include "hpcc.checkDefaultStoragePlane" (dict "root" $ "me" .) }}
{{- $hthorName := printf "%s-hthor" .name }}
{{- $eclAgentName := printf "%s-agent" .name }}
{{- $thorAgentName := printf "%s-thoragent" .name }}
{{- $workerName := printf "%s-worker" .name }}
{{- $serviceName := printf "%s-svc" .name }}
{{- $eclAgentDefaults := dict "name" $eclAgentName "useChildProcesses" true "replicas" 1 }}
{{- $eclAgentScope := .eclagent | mergeOverwrite $eclAgentDefaults | default $eclAgentDefaults }}
{{- $agentAppType := $eclAgentScope.type | default "hthor" }}
{{- $thorAgentDefaults := dict "name" $thorAgentName "useChildProcesses" false "replicas" 1 }}
{{- $thorAgentScope := .thoragent | mergeOverwrite $thorAgentDefaults | default $thorAgentDefaults }}
{{- $hthorDefaults := dict "name" $hthorName }}
{{- $hthorScope := .eclagent | mergeOverwrite $hthorDefaults | default $hthorDefaults }}
{{- $thorScopeStd := omit . "eclagent" "thoragent" "hthor" }}
{{- $thorScope := $thorAgentScope.useChildProcesses | ternary ($thorScopeStd | mergeOverwrite (dict "masterport" 0 "slaveport" 0)) ($thorScopeStd) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $eclAgentName | quote }}
spec:
  replicas: {{ $eclAgentScope.replicas }}
  selector:
    matchLabels:
      run: {{ $eclAgentName | quote }}
  template:
    metadata:
      labels:
        run: {{ $eclAgentName | quote }}
        accessDali: "yes"
        accessEsp: {{ .useChildProcesses | default false | ternary "yes" "no" | quote }}
      annotations:
        checksum/config: {{ include "hpcc.thorConfigMap" (dict "root" $ "me" .) | sha256sum }}
    spec:
      serviceAccountName: {{ $eclAgentScope.useChildProcesses | default false | ternary "hpcc-default" "hpcc-agent" }}
      containers:
      - name: {{ $eclAgentName | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ agentexec ]
        args: [
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }},
                {{ printf "\"--name=%s\"" .name }}
              ]
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- if .useChildProcesses }}
{{- include "hpcc.addResources" (dict "me" $thorScope.eclAgentResources) | indent 8 }}
{{- else }}
{{- include "hpcc.addStubResources" . | indent 8 }}
{{- end }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" .) | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
{{ include "hpcc.addDataVolumeMount" (dict "root" $ "me" . ) | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $ | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addDataVolume" (dict "root" $ "me" . ) | indent 6 }}
{{ include "hpcc.addDllVolume" $ | indent 6 }}
{{ include "hpcc.addSecretVolumes" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 6 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $thorAgentName | quote }}
spec:
  replicas: {{ $thorAgentScope.replicas }}
  selector:
    matchLabels:
      run: {{ $thorAgentName | quote }}
  template:
    metadata:
      labels:
        run: {{ $thorAgentName | quote }}
        accessDali: "yes"
        accessEsp: {{ .useChildProcesses | default false | ternary "yes" "no" | quote }}
    spec:
      serviceAccountName: {{ $thorAgentScope.useChildProcesses | default false | ternary "hpcc-default" "hpcc-thoragent" }}
      containers:
      - name: {{ $thorAgentName | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ agentexec ]
        args: [
                {{ include "hpcc.configArg" $thorAgentScope }},
                {{ include "hpcc.daliArg" $ }},
                {{ printf "\"--name=%s\"" .name }}
              ]
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- if not .useChildProcesses }}
{{- include "hpcc.addStubResources" . | indent 8 }}
{{- end }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" .) | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
{{ include "hpcc.addDataVolumeMount" (dict "root" $ "me" . ) | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $ | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addDataVolume" (dict "root" $ "me" . ) | indent 6 }}
{{ include "hpcc.addDllVolume" $ | indent 6 }}
{{ include "hpcc.addSecretVolumes" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 6 }}
---
{{ include "hpcc.thorConfigMap" (dict "root" $ "me" .) }}
{{- end }}
{{- end }}
