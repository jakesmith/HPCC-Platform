# NB: --build-arg's must be set for previous ARG's for future parts of multi-stage builds

name: st-docker
env:
  cacheversion: 27

on:
  push:
    branches:
      - master
      - candidate-7.12.x

jobs:
  build-and-setup:
    name: Build platform and regress setup container
    runs-on: ubuntu-20.04

    steps:
    - name: vars
      id: vars
      run: |
        echo GITHUB_ACTOR is ${GITHUB_ACTOR}
        echo base_ref is ${{ github.base_ref }}
        echo head_ref is ${{ github.head_ref }}
        echo ref is ${{ github.ref }}
        echo sha is ${{ github.sha }}
        echo github.actor is ${{ github.actor }}
        echo github.repository_owner is ${{ github.repository_owner }}
        echo event - base.sha ${{ github.event.pull_request.base.sha }}
        echo HEAD_BRANCH_CACHETAG - $HEAD_BRANCH_CACHETAG

    - name: Prerequisites
      id: setup
      run: |
        sudo apt-get update
        sudo apt-get install -yq cmake bison flex build-essential binutils-dev libldap2-dev libcppunit-dev libicu-dev libxslt1-dev zlib1g-dev libboost-regex-dev libarchive-dev libapr1-dev nodejs libaprutil1-dev libiberty-dev libhiredis-dev libtbb-dev git
        sudo apt-get install -yq libxalan-c-dev libnuma-dev nodejs libevent-dev libatlas-base-dev libblas-dev python3-dev default-libmysqlclient-dev libsqlite3-dev libmemcached-dev libcurl4-openssl-dev pkg-config libtool autotools-dev automake libssl-dev
        sudo apt-get install git-restore-mtime
        echo ::set-output name=mmbase-tag::$(if [ "${{ github.base_ref }}" = "master" ]; then git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/${{ github.repository_owner }}/HPCC-Platform 'community_*.*.*' | tail -n 1 | sed -e 's/^.*\(community_.*\)$/\1/'; else if [[ "${{ github.base_ref }}" =~ candidate-[0-9]+\.[0-9]+\..* ]]; then findstart=$(echo "${{ github.base_ref }}" | sed -e 's/candidate-\([0-9]\+\)\.\([0-9]\+\)\..*$/\1 \2/' | awk '{ print $1*100 + $2 + 0.999 }'); git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/${{ github.repository_owner }}/HPCC-Platform 'community_*.*.*' | sed -e 's/^.*\(community_\)\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)-\(.*\)$/\1 \2 \3 \4 \5/' | awk '{ if ($2*100+$3+$4/100 <= FINDSTART) { print "community_" $2 "." $3 "." $4 "-" $5 } }' FINDSTART=$findstart | tail -n 1; fi; fi)

    - name: Cache build
      id: build
      uses: actions/cache@v2
      with:
        path: |
          ./build-cache
          ./HPCC-Platform-cache
        key: hpccbuild-${{ github.ref }}-${{ env.cacheversion }}
         
    - name: build
      if: steps.build.outputs.cache-hit != 'true'
      run: |
        git clone -j 4 --recurse-submodules --branch ${{ github.ref }} https://github.com/${{ github.repository_owner }}/HPCC-Platform
        cd HPCC-Platform
        git restore-mtime
        cd ..
        mkdir build
        cd build
        touch premake-timestamp
        cmake ../HPCC-Platform -Wno-dev -DRUNTIME_USER=$(whoami) -DRUNTIME_GROUP=$(id -gn) -DDESTDIR=$(realpath ..)/install  -DINCLUDE_PLUGINS=0 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_PYTHON2=0 -DUSE_PYTHON3=0 -DSUPPRESS_SPARK=1 -DUSE_CPPUNIT=${USE_CPPUNIT} -DUSE_CASSANDRA=Off -DCMAKE_CXX_FLAGS="-DBUILD_TAG=\\\"dummytag\\\" -DBUILD_VERSION_MAJOR=1 -DBUILD_VERSION_MINOR=1 -DBUILD_VERSION_POINT=0"
        make -j$(nproc) jlib
        cd ..
        cp -rp ./build ./build-cache
        cd HPCC-Platform
        find -name '.git*' -prune -o -newer ../build/premake-timestamp -type f -print | cpio -p -dum ../HPCC-Platform-cache

