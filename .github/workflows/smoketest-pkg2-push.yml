# NB: --build-arg's must be set for previous ARG's for future parts of multi-stage builds

name: st-docker
env:
  cacheversion: 36

on:
  push:
    branches:
      - master
      - candidate-7.12.x

jobs:
  build-and-setup:
    name: Build platform and regress setup container
    runs-on: ubuntu-20.04

    steps:
    - name: vars
      run: |
        pwd
        echo GITHUB_ACTOR is ${GITHUB_ACTOR}
        echo base_ref is ${{ github.base_ref }}
        echo head_ref is ${{ github.head_ref }}
        echo ref is ${{ github.ref }}
        echo sha is ${{ github.sha }}
        echo github.actor is ${{ github.actor }}
        echo github.repository_owner is ${{ github.repository_owner }}
        echo event - base.sha ${{ github.event.pull_request.base.sha }}
        echo HEAD_BRANCH_CACHETAG - $HEAD_BRANCH_CACHETAG

    - name: Fetch cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/work/HPCC-Platform/build-cache
          ~/work/HPCC-Platform/HPCC-Platform-cache
        key: hpccbuild-${{ env.cacheversion }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          hpccbuild-${{ env.cacheversion }}-${{ github.ref }}
          hpccbuild-${{ env.cacheversion }}-
         
    - name: Check cache
      id: check-cache
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pwd
        if [ -d ../build-cache/system/jlib/CMakeFiles/jlib.dir ]; then echo realpath=$(../build-cache/system/jlib/CMakeFiles/jlib.dir); ls -lt ../build-cache/system/jlib/CMakeFiles/jlib.dir; else echo ../build-cache/system/jlib/CMakeFiles/jlib.dir not present; fi
        echo ::set-output name=cache-exists::$(if [ -d ~/work/HPCC-Platform/build-cache ]; then echo true; else echo false; fi)
        
    - name: Prerequisites
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pwd
        sudo apt-get update
        sudo apt-get install -yq cmake bison flex build-essential binutils-dev libldap2-dev libcppunit-dev libicu-dev libxslt1-dev zlib1g-dev libboost-regex-dev libarchive-dev libapr1-dev nodejs libaprutil1-dev libiberty-dev libhiredis-dev libtbb-dev git
        sudo apt-get install -yq libxalan-c-dev libnuma-dev nodejs libevent-dev libatlas-base-dev libblas-dev python3-dev default-libmysqlclient-dev libsqlite3-dev libmemcached-dev libcurl4-openssl-dev pkg-config libtool autotools-dev automake libssl-dev
        sudo apt-get install git-restore-mtime

    - name: Checkout
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Restore mtime
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pwd
        git restore-mtime
        git submodule foreach --recursive git restore-mtime

    - name: Cache hit prep
      if: steps.cache.outputs.cache-hit != 'true' && steps.check-cache.outputs.cache-exists == 'true'
      run: |
        pwd
        echo content of ../build-cache/system/jlib/CMakeFiles/jlib.dir
        if [ -d ../build-cache/system/jlib/CMakeFiles/jlib.dir ]; then ls -lt ../build-cache/system/jlib/CMakeFiles/jlib.dir; else echo ../build-cache/system/jlib/CMakeFiles/jlib.dir not present; fi
        mv ../build-cache ../build
        cd ../HPCC-Platform-cache
        find . -type f | cpio -p -dum ../HPCC-Platform
        echo content of ~/work/HPCC-Platform/build/system/jlib/CMakeFiles/jlib.dir
        cd ../HPCC-Platform
        echo delete .git...
        find . -name '.git*'
        find . -name '.git*' | xargs rm -rf
        echo delete done
        echo content of ~/work/HPCC-Platform/
        ls -lt ~/work/HPCC-Platform/

    - name: Cache miss prep
      if: steps.cache.outputs.cache-hit != 'true' && steps.check-cache.outputs.cache-exists != 'true'
      run: |
        pwd
        echo Cache miss
        mkdir ../build
        
    - name: Build
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pwd
        cd ../build
        touch premake-timestamp
        cmake ../HPCC-Platform -Wno-dev -DRUNTIME_USER=$(whoami) -DRUNTIME_GROUP=$(id -gn) -DDESTDIR=$(realpath ..)/install  -DINCLUDE_PLUGINS=0 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_PYTHON2=0 -DUSE_PYTHON3=0 -DSUPPRESS_SPARK=1 -DUSE_CPPUNIT=${USE_CPPUNIT} -DUSE_CASSANDRA=Off -DCMAKE_CXX_FLAGS="-DBUILD_TAG=\\\"dummytag\\\" -DBUILD_VERSION_MAJOR=1 -DBUILD_VERSION_MINOR=1 -DBUILD_VERSION_POINT=0"
        echo ===============================
        echo AFTER CMAKE
        echo ===============================
        if [ -d system/jlib/CMakeFiles/jlib.dir ]; then ls -lt system/jlib/CMakeFiles/jlib.dir; else echo system/jlib/CMakeFiles/jlib.dir not present; fi
        echo ===============================
        make -j$(nproc) jlib
        echo ===============================
        echo THE CONTENTS AFTER MAKE OF build [relative] dir 
        echo ===============================
        if [ -d system/jlib/CMakeFiles/jlib.dir ]; then ls -lt system/jlib/CMakeFiles/jlib.dir; else echo system/jlib/CMakeFiles/jlib.dir not present; fi
        echo ===============================
        cd ..
        cp -rp ./build ./build-cache
        mkdir -p HPCC-Platform-cache
        cd HPCC-Platform
        find -name '.git*' -prune -o -newer ../build/premake-timestamp -type f -print | cpio -p -dum ../HPCC-Platform-cache
        echo ===============================
        echo THE CONTENTS AT END ../build-cache
        echo ===============================
        if [ -d ../build-cache/system/jlib/CMakeFiles/jlib.dir ]; then ls -lt ../build-cache/system/jlib/CMakeFiles/jlib.dir; else echo ../build-cache/system/jlib/CMakeFiles/jlib.dir not present; fi
        echo ===============================

