# This is a basic workflow to help you get started with Actions
# NB: --build-arg's must be set for previous ARG's for future parts of multi-stage builds

name: st-docker

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
#  push:
#    branches:
#      - notmain
  pull_request:
    branches:
      - master

jobs:
  build-and-setup:
    name: A job to build and push docker
    runs-on: ubuntu-20.04
    env:
      IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-image
      MAJOR_MINOR_BASE_BRANCH_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-major-minor-base
      BASE_BRANCH_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-base-branch-build:${{ github.base_ref }}_${{ github.event.pull_request.base.sha }}
      HEAD_BRANCH_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-head-branch-build:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}
      REGRESS_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-regress-setup:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}

    steps:
    - name: vars
      id: vars
      run: |
        echo GITHUB_ACTOR is ${GITHUB_ACTOR}
        echo base_ref is ${{ github.base_ref }}
        echo head_ref is ${{ github.head_ref }}
        echo ref is ${{ github.ref }}
        echo sha is ${{ github.sha }}
        echo github.actor is ${{ github.actor }}
        echo github.repository_owner is ${{ github.repository_owner }}
        echo event - base.sha ${{ github.event.pull_request.base.sha }}
        echo HEAD_BRANCH_TAG - $HEAD_BRANCH_TAG
        echo ::set-output name=MAJOR_MINOR_BASE_VERSION::$(git tag --sort=committerdate -l 'community_*' | sed -e 's/^community_\([0-9][0-9]*\)\.\([0-9][0-9]*\)\.\([0-9][0-9]*\)\-.*$/\1 \2 \3/' | sort -n -k1 -k2 -k3 | head -n 1)
        echo MAJOR_MINOR_BASE_VERSION1 = ${{ steps.vars.outputs.MAJOR_MINOR_BASE_VERSION }}
    - name: read-output
      run: |
        echo MAJOR_MINOR_BASE_VERSION2 = ${{ steps.vars.outputs.MAJOR_MINOR_BASE_VERSION }}

#    - name: Checkout
#      uses: actions/checkout@v2
#      with:
#        fetch-depth: 1
##        submodules: recursive ## guessing, check

    - name: Download files # might be better as a tarball and 1 file download
      run: |
        mkdir -p smoketest
        curl -s --output smoketest/Dockerfile "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/Dockerfile"
        curl -s --output smoketest/entrypoint.sh "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/entrypoint.sh"
        curl -s --output smoketest/ecl-test.json "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/ecl-test.json"

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

# NB: cache to registry (as smoketest-image), so others action runs can share
    - name: Build base image
      run: docker buildx build --builder=${{ steps.buildx.outputs.name }} --target base-image --push -t $IMAGE_TAG --cache-from type=registry,ref=$IMAGE_TAG --cache-to type=registry,ref=$IMAGE_TAG smoketest/

    - name: Build major-minor base branch
      run: docker buildx build --builder=${{ steps.buildx.outputs.name }} --target master-base-build --push --build-arg BASE_REPO=${{ github.repository_owner }} --build-arg BASE_BRANCH=${{ github.base_ref }} --build-arg BASE_SHA=${{ github.event.pull_request.base.sha }} -t $MAJOR_MINOR_BASE_BRANCH_TAG --cache-from type=registry,ref=$IMAGE_TAG --cache-from type=registry,ref=$MAJOR_MINOR_BASE_BRANCH_TAG --cache-to type=registry,ref=$MAJOR_MINOR_BASE_BRANCH_TAG smoketest/

    - name: Build base branch
      run: docker buildx build --builder=${{ steps.buildx.outputs.name }} --target base-branch-build --push --build-arg BASE_REPO=${{ github.repository_owner }} --build-arg BASE_BRANCH=${{ github.base_ref }} --build-arg BASE_SHA=${{ github.event.pull_request.base.sha }} -t $BASE_BRANCH_TAG --cache-from type=registry,ref=$IMAGE_TAG --cache-from type=registry,ref=$MAJOR_MINOR_BASE_BRANCH_TAG --cache-from type=registry,ref=$BASE_BRANCH_TAG --cache-to type=registry,ref=$BASE_BRANCH_TAG smoketest/

    - name: Build head branch
      run: docker buildx build --builder=${{ steps.buildx.outputs.name }} --target head-branch-build --build-arg BASE_REPO=${{ github.repository_owner }} --build-arg BASE_BRANCH=${{ github.base_ref }} --build-arg BASE_SHA=${{ github.event.pull_request.base.sha }} --build-arg HEAD_REPO=${{ github.actor }} --build-arg HEAD_BRANCH=${{ github.ref }} --build-arg HEAD_SHA=${{ github.event.pull_request.head.sha }} -t $HEAD_BRANCH_TAG --cache-from type=registry,ref=$IMAGE_TAG --cache-from type=registry,ref=$MAJOR_MINOR_BASE_BRANCH_TAG --cache-from type=registry,ref=$BASE_BRANCH_TAG smoketest/

# NB: no cache to registry, as not common with others
# pushed, as other jobs in this action will use this image in parallel to run the regression suite queries

    - name: Regress setup
      run: docker buildx build --builder=${{ steps.buildx.outputs.name }} --target regress-setup --push --build-arg BASE_REPO=${{ github.repository_owner }} --build-arg BASE_BRANCH=${{ github.base_ref }} --build-arg BASE_SHA=${{ github.event.pull_request.base.sha }} --build-arg HEAD_REPO=${{ github.actor }} --build-arg HEAD_BRANCH=${{ github.ref }} --build-arg HEAD_SHA=${{ github.event.pull_request.head.sha }} -t $REGRESS_TAG smoketest/

#  regress-hthor:
#    runs-on: ubuntu-20.04
#    name: Regression hthor job
#    needs: [ build-and-setup ]
#    steps:
#    - name: Regression suite hthor
#      run: docker run --name 'smoketest-regress-hthor' $REGRESS_TAG hthor

