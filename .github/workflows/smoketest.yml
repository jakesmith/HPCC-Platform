# This is a basic workflow to help you get started with Actions
# NB: --build-arg's must be set for previous ARG's for future parts of multi-stage builds

name: st-docker
env:
  IMAGE_CACHETAG: ghcr.io/${{ github.repository_owner }}/smoketest-image
  MM_CACHETAG: ghcr.io/${{ github.repository_owner }}/smoketest-major-minor-base
  BASE_BRANCH_CACHETAG: ghcr.io/${{ github.repository_owner }}/smoketest-base-branch-build:${{ github.base_ref }}_${{ github.event.pull_request.base.sha }}
  HEAD_BRANCH_CACHETAG: ghcr.io/${{ github.repository_owner }}/smoketest-head-branch-build:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}
  REGRESS_CACHETAG: ghcr.io/${{ github.repository_owner }}/smoketest-regress-setup:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
#  push:
#    branches:
#      - notmain
  pull_request:
    branches:
      - master

jobs:
  build-and-setup:
    name: A job to build and push docker
    runs-on: ubuntu-20.04

#      IMAGE_CACHETAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-image
#      MM_CACHETAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-major-minor-base
#      BASE_BRANCH_CACHETAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-base-branch-build:${{ github.base_ref }}_${{ github.event.pull_request.base.sha }}
#      HEAD_BRANCH_CACHETAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-head-branch-build:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}
#      REGRESS_CACHETAG: ${{ secrets.DOCKERHUB_USERNAME }}/smoketest-regress-setup:${{ github.head_ref }}_${{ github.event.pull_request.head.sha }}

    steps:
    - name: vars
      id: vars
      run: |
        echo GITHUB_ACTOR is ${GITHUB_ACTOR}
        echo base_ref is ${{ github.base_ref }}
        echo head_ref is ${{ github.head_ref }}
        echo ref is ${{ github.ref }}
        echo sha is ${{ github.sha }}
        echo github.actor is ${{ github.actor }}
        echo github.repository_owner is ${{ github.repository_owner }}
        echo event - base.sha ${{ github.event.pull_request.base.sha }}
        echo HEAD_BRANCH_CACHETAG - ${{ env.HEAD_BRANCH_CACHETAG }}

#    - name: Checkout
#      uses: actions/checkout@v2
#      with:
#        fetch-depth: 1
##        submodules: recursive ## guessing, check

    - name: Download files # might be better as a tarball and 1 file download
      id: dlfiles
      run: |
        mkdir -p smoketest
        curl -s --output smoketest/Dockerfile "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/Dockerfile"
        curl -s --output smoketest/entrypoint.sh "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/entrypoint.sh"
        curl -s --output smoketest/ecl-test.json "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/ecl-test.json"
        curl -s --output smoketest/getmajorminorbase.sh "https://raw.githubusercontent.com/${{ github.repository_owner }}/HPCC-Platform/${{ github.sha }}/.github/workflows/smoketest/getmajorminorbase.sh"
        chmod +x smoketest/getmajorminorbase.sh
        echo ::set-output name=mmbase-tag::$(smoketest/getmajorminorbase.sh ${{ github.repository_owner }} ${{ github.base_ref }})

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.CR_PAT }}

#        password: ${{ secrets.DOCKERHUB_TOKEN }}

# NB: cache to registry (as smoketest-image), so others action runs can share
    - name: Build base image
      uses: docker/build-push-action@v2
      with:
        context: smoketest
        file: smoketest/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: base-image
        cache-from: ${{ env.IMAGE_CACHETAG }}
        cache-to: type=inline
        tags: ${{ env.IMAGE_CACHETAG }}

    - name: Build major-minor base branch
      uses: docker/build-push-action@v2
      with:
        context: smoketest
        file: smoketest/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: major-minor-base-build
        build-args: |
          BASE_REPO=${{ github.repository_owner }}
          MAJOR_MINOR_BASE=${{ steps.dlfiles.outputs.mmbase-tag }}
        cache-from: |
          ${{ env.IMAGE_CACHETAG }}
          ${{ env.MM_CACHETAG }}:${{ steps.dlfiles.outputs.mmbase-tag }}
        cache-to: type=inline
        tags: ${{ env.MM_CACHETAG }}:${{ steps.dlfiles.outputs.mmbase-tag }}

    - name: Build base branch
      uses: docker/build-push-action@v2
      with:
        context: smoketest
        file: smoketest/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: base-branch-build
        build-args: |
          BASE_REPO=${{ github.repository_owner }}
          MAJOR_MINOR_BASE=${{ steps.dlfiles.outputs.mmbase-tag }}
          BASE_BRANCH=${{ github.base_ref }} 
          BASE_SHA=${{ github.event.pull_request.base.sha }} 
        cache-from: |
          ${{ env.IMAGE_CACHETAG }}
          ${{ env.MM_CACHETAG }}:${{ steps.dlfiles.outputs.mmbase-tag }}
          ${{ env.BASE_BRANCH_CACHETAG }}
        cache-to: type=inline
        tags: ${{ env.BASE_BRANCH_CACHETAG }}

    - name: Build head branch
      uses: docker/build-push-action@v2
      with:
        context: smoketest
        file: smoketest/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: head-branch-build
        build-args: |
          BASE_REPO=${{ github.repository_owner }}
          MAJOR_MINOR_BASE=${{ steps.dlfiles.outputs.mmbase-tag }} 
          BASE_BRANCH=${{ github.base_ref }} 
          BASE_SHA=${{ github.event.pull_request.base.sha }} 
          HEAD_REPO=${{ github.actor }} 
          HEAD_BRANCH=${{ github.ref }} 
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
        cache-from: |
          ${{ env.IMAGE_CACHETAG }}
          ${{ env.MM_CACHETAG }}:${{ steps.dlfiles.outputs.mmbase-tag }}
          ${{ env.BASE_BRANCH_CACHETAG }}
        cache-to: type=inline
        tags: ${{ env.HEAD_BRANCH_CACHETAG }}

    - name: Regress setup
      uses: docker/build-push-action@v2
      with:
        context: smoketest
        file: smoketest/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: regress-setup
        build-args: |
          BASE_REPO=${{ github.repository_owner }}
          MAJOR_MINOR_BASE=${{ steps.dlfiles.outputs.mmbase-tag }}
          BASE_BRANCH=${{ github.base_ref }} 
          BASE_SHA=${{ github.event.pull_request.base.sha }} 
          HEAD_REPO=${{ github.actor }} 
          HEAD_BRANCH=${{ github.ref }} 
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
        cache-from: |
          ${{ env.IMAGE_CACHETAG }}
          ${{ env.MM_CACHETAG }}:${{ steps.dlfiles.outputs.mmbase-tag }}
          ${{ env.BASE_BRANCH_CACHETAG }}
          ${{ env.HEAD_BRANCH_CACHETAG }}
        tags: ${{ env.REGRESS_CACHETAG }}

  regress-hthor-a-h:
    runs-on: ubuntu-20.04
    name: Regression hthor job a-h
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite hthor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-hthor' ${{ env.REGRESS_CACHETAG }} hthor '^[a-h]*.ecl'

  regress-hthor-i-q:
    runs-on: ubuntu-20.04
    name: Regression hthor job i-q
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite hthor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-hthor' ${{ env.REGRESS_CACHETAG }} hthor '^[i-q]*.ecl'

  regress-hthor-r-z:
    runs-on: ubuntu-20.04
    name: Regression hthor job r-z
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite hthor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-hthor' ${{ env.REGRESS_CACHETAG }} hthor '^[r-z]*.ecl'

  regress-thor-a-h:
    runs-on: ubuntu-20.04
    name: Regression thor job a-h
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite thor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-thor' ${{ env.REGRESS_CACHETAG }} thor '^[a-h]*.ecl'

  regress-thor-i-q:
    runs-on: ubuntu-20.04
    name: Regression thor job i-q
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite thor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-thor' ${{ env.REGRESS_CACHETAG }} thor '^[i-q]*.ecl'

  regress-thor-r-z:
    runs-on: ubuntu-20.04
    name: Regression thor job r-z
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite thor
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-thor' ${{ env.REGRESS_CACHETAG }} thor '^[r-z]*.ecl'

  regress-roxie-a-h:
    runs-on: ubuntu-20.04
    name: Regression roxie job a-h
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite roxie
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-roxie' ${{ env.REGRESS_CACHETAG }} roxie '^[a-h]*.ecl'

  regress-roxie-i-q:
    runs-on: ubuntu-20.04
    name: Regression roxie job i-q
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite roxie
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-roxie' ${{ env.REGRESS_CACHETAG }} roxie '^[i-q]*.ecl'

  regress-roxie-r-z:
    runs-on: ubuntu-20.04
    name: Regression roxie job r-z
    needs: [ build-and-setup ]
    steps:
    - name: Regression suite roxie
      run: |
        docker pull ${{ env.REGRESS_CACHETAG }}
        docker run --name 'smoketest-regress-roxie' ${{ env.REGRESS_CACHETAG }} roxie '^[r-z]*.ecl'
