# STAGE - build image with pre-requisites
FROM ubuntu:20.04 AS base-image

SHELL ["/bin/bash", "-c"]
ARG DEBIAN_FRONTEND=noninteractive
RUN TZ=Europe/London \
    apt-get update

# JCSMORE - would be interesting to retrieve pre-requisites, based on target platform, automatically
# e.g. have wiki definitions formalized/parsable and fetch them from there

RUN apt-get install -y cmake bison flex build-essential binutils-dev libldap2-dev libcppunit-dev libicu-dev libxslt1-dev zlib1g-dev libboost-regex-dev libarchive-dev python-dev libv8-dev default-jdk libapr1-dev libaprutil1-dev libiberty-dev libhiredis-dev libtbb-dev libxalan-c-dev libnuma-dev nodejs libevent-dev libatlas-base-dev libblas-dev python3-dev default-libmysqlclient-dev libsqlite3-dev r-base-dev r-cran-rcpp r-cran-rinside r-cran-inline libmemcached-dev libcurl4-openssl-dev pkg-config libtool autotools-dev automake libssl-dev wget curl git

RUN curl -sL https://deb.nodesource.com/setup_15.x | bash - && apt-get install -y nodejs

RUN groupadd -g 1000 hpcc && \
    useradd -s /bin/bash -r -m -N -c "hpcc runtime User" -u 999 -g hpcc hpcc && \
    passwd -l hpcc && \
    mkdir -p /hpcc-dev/build && \
    mkdir -p /hpcc-dev/hpccinstall && \
    chown -R hpcc:hpcc /hpcc-dev 

USER hpcc
WORKDIR /hpcc-dev/build


# STAGE - build master base
FROM base-image AS major-minor-base-build

ARG BASE_REPO=hpcc-systems
ARG MAJOR_MINOR_BASE=community_7.0.0
ARG BUILD_TYPE=RelWithDebInfo
ARG USE_CPPUNIT=0

RUN echo in build of major-minor-base-build


# STAGE - build base branch
FROM major-minor-base-build AS base-branch-build

ARG BASE_BRANCH=master
ARG BASE_SHA=dummysha

RUN echo in build base branch

# STAGE - build head branch
FROM base-branch-build AS head-branch-build

RUN echo in build head branch

# STAGE - Regress setup
FROM base-image AS regress-setup

RUN echo in regress setup